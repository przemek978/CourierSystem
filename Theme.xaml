<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">



    <Style TargetType="{x:Type Window}">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="D:\Projects\CourierSystem\Background.jpg" Stretch="UniformToFill"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="helvetica"/>
        <Setter Property="FontSize" Value="19"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Background" Value="DarkOrange"/>
        <Setter Property="Opacity" Value="10"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="20" BorderThickness="2"
                            BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Gold"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Gold"/>
                <Setter Property="Foreground" Value="DarkBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    

    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="DarkOrange"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Opacity" Value="0.1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="DarkOrange"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0.5"/>
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="Padding" Value="5"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Gold"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightYellow"/>
                <Setter Property="Opacity" Value="1"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Background" Value="DarkOrange"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Height" Value="30"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.5"/>
                <Setter Property="Background" Value="Gold"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Orange" />
        <Setter Property="BorderBrush" Value="Orange" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border CornerRadius="5"/>
                        <ToggleButton x:Name="ToggleButton"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="{TemplateBinding Background}"
                                      Padding="{TemplateBinding Padding}"
                                      HorizontalContentAlignment="Left"
                                      VerticalContentAlignment="Center"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock Text="{TemplateBinding Text}" />
                        </ToggleButton>
                        
                        <Popup x:Name="Popup"
                           AllowsTransparency="True"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           Placement="Bottom"
                           PlacementTarget="{Binding ElementName=ToggleButton}"
                           StaysOpen="False">
                            <Grid x:Name="DropDown"
                              Background="{TemplateBinding Background}"
                              SnapsToDevicePixels="True">
                                <ScrollViewer>
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                        <Path x:Name="Arrow" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M0,0 L4,4 L8,0 z" Fill="Black" Margin="0,0,5,0">
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Setter Property="Visibility" Value="Visible" />
                                    <Style.Triggers>
                                        <Trigger Property="ComboBox.IsDropDownOpen" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Setter Property="Data" Value="M0,4 L4,0 L8,4 z" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="DodgerBlue" />
                            <Setter TargetName="ToggleButton" Property="BorderThickness" Value="2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="LightGray" />
                            <Setter Property="Background" Value="Gray" />
                            <Setter Property="BorderBrush" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="Orange" />
        <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Black" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Background" Value="Orange"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Gold"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="PasswordBox">
        <Setter Property="Background" Value="Orange"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="False"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Gold"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Ellipse x:Name="RadioEllipse" Width="20" Height="20" Fill="Orange" Stroke="Orange" StrokeThickness="2" />
                        <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="RadioEllipse" Property="Fill" Value="Black" />
                            <Setter TargetName="RadioEllipse" Property="Stroke" Value="Orange" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="RadioEllipse" Property="Fill" Value="Gray" />
                            <Setter TargetName="RadioEllipse" Property="Stroke" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="Orange" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="Transparent">
                        <Ellipse x:Name="CheckEllipse" Width="20" Height="20" Fill="Orange" Stroke="Orange" StrokeThickness="2" />
                        <Path x:Name="CheckMark" Data="M5,10 L10,15 L15,5" Stroke="White" StrokeThickness="2" Visibility="Collapsed" />
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckEllipse" Property="Fill" Value="Gray" />
                            <Setter TargetName="CheckEllipse" Property="Stroke" Value="Gray" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>